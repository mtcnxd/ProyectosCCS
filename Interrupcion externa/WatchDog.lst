CCS PCH C Compiler, Version 4.140, 38880               02-may-13 01:23

               Filename:   D:\Electronica\CCS\WDT\WatchDog.lst

               ROM used:   246 bytes (1%)
                           Largest free fragment is 32518
               RAM used:   25 (1%) at main() level
                           25 (1%) worst case
               Stack:     1 worst case (0 in main + 1 for interrupts)

*
0000:  GOTO   00CE
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00BA
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   00C4
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <18F2550.h> 
.................... //////// Standard Header file for the PIC18F2550 device //////////////// 
.................... #device PIC18F2550 
.................... #list 
....................  
.................... #device adc = 10 
.................... #fuses HSPLL,NOLVP,NODEBUG,PLL2,CPUDIV1,VREGEN,NOPBADEN, NOWDT 
.................... #use delay (clock = 48M) 
.................... //#include <lcd.c> 
....................  
.................... #INT_TIMER0 
.................... void interrupt_timer0() { 
....................    set_timer0(0);                   // Reinicia el contador del Timer0 
00BA:  CLRF   FD7
00BC:  CLRF   FD6
.................... } 
....................  
00BE:  BCF    FF2.2
00C0:  GOTO   006C
.................... #INT_EXT 
.................... void interrupt_ext0() { 
....................    output_toggle(PIN_C2); 
00C4:  BCF    F94.2
00C6:  BTG    F8B.2
.................... } 
....................  
00C8:  BCF    FF2.1
00CA:  GOTO   006C
.................... void main(void) { 
00CE:  CLRF   FF8
00D0:  BCF    FD0.7
00D2:  BSF    07.7
00D4:  CLRF   FEA
00D6:  CLRF   FE9
00D8:  MOVF   FC1,W
00DA:  ANDLW  C0
00DC:  IORLW  0F
00DE:  MOVWF  FC1
00E0:  MOVLW  07
00E2:  MOVWF  FB4
.................... //   lcd_init(); 
....................  
....................    setup_timer_0(T0_INTERNAL | T0_DIV_8);  // T0_DIV_4 indica un Prescaler = 4 
00E4:  MOVLW  82
00E6:  MOVWF  FD5
....................    set_timer0(5);                            // En esta función ponemos el valor de CuentaInicial 
00E8:  CLRF   FD7
00EA:  MOVLW  05
00EC:  MOVWF  FD6
....................     
....................    enable_interrupts(GLOBAL);       // Habilita interrupciones globales 
00EE:  MOVLW  C0
00F0:  IORWF  FF2,F
....................    enable_interrupts(INT_TIMER0);   // Habilita interrupció específica  
00F2:  BSF    FF2.5
....................    enable_interrupts( INT_EXT ); 
00F4:  BSF    FF2.4
....................  
.................... while (TRUE) { 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "Prueba externa"); 
....................       //delay_ms(200); 
....................    } 
00F6:  BRA    00F6
.................... } 
....................  
00F8:  SLEEP 

Configuration Fuses:
   Word  1: CE21   PLL2 CPUDIV1 USBDIV HSPLL FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8500   CCP2C1 NOPBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
